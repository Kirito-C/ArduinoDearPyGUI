#include <DHT11.h>
#include <ArduinoJson.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

#define DHT_PIN 2
int LED_ROSSO = 12; //temp
int LED_VERDE = 11; //temp

int LED_BLU = 10; //hum
int LED_GIALLO = 9; //hum

//resistenze da minimo 220 Ohm

const int SOGLIA_MIN_TEMP = 20;
const int SOGLIA_MAX_TEMP = 25;
const int SOGLIA_MIN_HUM = 30;
const int SOGLIA_MAX_HUM = 60;

DHT11 dht11(DHT_PIN);
LiquidCrystal_I2C lcd(0x27, 16, 2); //i pin A4 e A5 li ha all'interno ain automatico

void setup() {
  Serial.begin(9600);
  pinMode(LED_VERDE, OUTPUT);
  pinMode(LED_ROSSO, OUTPUT);
  
  // Inizializzazione LCD
  Wire.begin(); // Permette la comunicazione con l'I2C
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Temp:    Hum:");
}

void loop() {
  StaticJsonDocument<200> doc;
  int temp = 0;
  int hum = 0;

  int result = dht11.readTemperatureHumidity(temp, hum);
  
  if(result == 0) {
    if(temp >= SOGLIA_MAX_TEMP) {
      digitalWrite(LED_ROSSO, HIGH);
      digitalWrite(LED_VERDE, LOW);
    } else if (temp > SOGLIA_MIN_TEMP && temp < SOGLIA_MAX_TEMP) {
      digitalWrite(LED_ROSSO, HIGH);
      digitalWrite(LED_VERDE, HIGH);
    } else if (temp <= SOGLIA_MIN_TEMP) {
      digitalWrite(LED_ROSSO, LOW);
      digitalWrite(LED_VERDE, HIGH);
    }

    if(hum > SOGLIA_MAX_HUM) {
      digitalWrite(LED_BLU, HIGH);
      digitalWrite(LED_GIALLO, LOW);
    } else if (hum > SOGLIA_MIN_HUM && temp < SOGLIA_MAX_HUM) {
      digitalWrite(LED_BLU, HIGH);
      digitalWrite(LED_GIALLO, HIGH);
    } else if (hum < SOGLIA_MIN_HUM) {
      digitalWrite(LED_BLU, LOW);
      digitalWrite(LED_GIALLO, HIGH);
    }

    // Aggiorno i valori sullo schermo
    lcd.setCursor(5, 0);
    lcd.print(String(temp) + "C  ");
    lcd.setCursor(5, 1);
    lcd.print(String(hum) + "%  ");

    // Invio dati alla seriale
    doc["time"] = millis();
    doc["temp"] = temp;
    doc["humidity"] = hum;
    
    serializeJson(doc, Serial);
    Serial.println();
  }
  else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("dati illeggibili");
  }
  
  delay(5000);
}
